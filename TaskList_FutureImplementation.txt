Unprioritized List:
========================================================
0) FAXE.FAXE cmd tool
- to try out the tooling provide a command line tool
- Maybe linked to Bash script of partial commit
--------------------------------------------------------
1) Feature Tree Extraction of Clafer Model
- Usage of Metamodel in Java to provide data to user. https://www.baeldung.com/hibernate-criteria-queries-metamodel
- Alternatively provide tree-object with nodes?!
--------------------------------------------------------
2) With knowledge about hierarchy and which features available extend library return List with this information (boolean field)
--------------------------------------------------------
3) Library return object represents EAs which reflects the structure (no collection into "Fragments")
- Direct reflection of code structure to avoid assumptions in how fragments are build.
--------------------------------------------------------
4) For fileAnnotations.g4 the specification asks for files names with spaces to use the escape character " " to support them.
- To be added to grammar.
--------------------------------------------------------
5) Integration of engine into target project build or at least CI to warn when embedded annotation has a failure (e.g. missing "end")
--------------------------------------------------------
6) Support of statistics such as scattering and tangling
--------------------------------------------------------
7) Extend tests possibilities with: Possibility with current definition that markers can be in one line after some code that multiple markers are in one line,
e.g. ``...getLabel () ,  //\&line[ BIP21 ] //\&end [ Codecs ]''
--------------------------------------------------------
8) Make FAXE.FAXE configurable, e.g. feature-to-file/-folder names , hierarchy-file-name,
--------------------------------------------------------
9) Backward compatibility to EA definitions of Ji,Sina,...
--------------------------------------------------------
10) Engine integration into FeatureDashboard, FeatureIDE, ...?
--------------------------------------------------------
11) Engine extension to deal with IFDEF
--------------------------------------------------------
12) Detecting of faulty EA, e.g. typo in begin/end/line, &-symbol missing or missing opening/closing brace
--------------------------------------------------------
13) \&begin or \&end embedded annotation missing-marker detection
--------------------------------------------------------
14) Error handling "Input files/paths don't exist"
--------------------------------------------------------
15) Docu: add that library provides warnings in case something is wrong (correct syntax); Which checks (warnings) are covered by engine (being/end) ; file not exist
--------------------------------------------------------
16) Capability to analyze Git repository
--------------------------------------------------------
17) Engine to return meta-modell object to caller (that he can do its own questions to it)
--------------------------------------------------------
18) Fitting to 9,8 -> Make usage of IDFEF possible. Might be linked to extension of this library for usage in C/C++
--------------------------------------------------------
19) Feature-to-File: File names with spaces and therefore "file.txt" support to be tested
--------------------------------------------------------
20) To be researched:
-- YAML-definition as mapping grammar?
-- Further mapping concepts: feature-to-team? -component? ... (most likely just other embedded names, but might provide some new use cases)
--------------------------------------------------------
21) Work on limitation: - Hierarchy Model in root folder
--------------------------------------------------------
22) Project verification function -> Give FAXE a directory/file and return if valid according EA-Specification or not
--------------------------------------------------------
23) Combine with git commands: E.g. when git add is called, add additional print for "FeatureA, ... modified."
--------------------------------------------------------
24) Buffer FAXE analysis results and only re-read changed files
--------------------------------------------------------
25) One pager summary of EA (complete annotation syntax in a table; show some regular expressions examples
    Show which parts are covered by version 1 of the Engine
--------------------------------------------------------



Future Work:
========================================================
- Mini Online EA Simulator
--------------------------------------------------------
