Unprioritized List:
========================================================
0) FAXE.FAXE cmd tool
- to try out the tooling provide a command line tool
--------------------------------------------------------
1) Feature Tree Extraction of Clafer Model
- Usage of Metamodel in Java to provide data to user. https://www.baeldung.com/hibernate-criteria-queries-metamodel
- Alternatively provide tree-object with nodes?!
--------------------------------------------------------
2) With knowledge about hierarchy and which features available extend library return List with this information
--------------------------------------------------------
3) Library return object represents EAs which reflects the structure (no collection into "Fragments")
- Direct reflection of code structure to avoid assumptions in how fragments are build.
--------------------------------------------------------
4) For fileAnnotations.g4 the specification asks for files names with spaces to use the escape character " " to support them.
- To be added to grammar.
--------------------------------------------------------
5) Integration of engine into target project build or at least CI to warn when embedded annotation has a failure (e.g. missing "end")
--------------------------------------------------------
6) Support of statistics such as scattering and tangling
--------------------------------------------------------
7) Extend tests possibilities with: Possibility with current definition that markers can be in one line after some code that multiple markers are in one line,
e.g. ``...getLabel () ,  //\&line[ BIP21 ] //\&end [ Codecs ]''
--------------------------------------------------------
8) Make FAXE.FAXE configurable, e.g. feature-to-file/-folder names , hierarchy-file-name,
--------------------------------------------------------
9) Backward compatibility to EA definitions of Ji,Sina,...
--------------------------------------------------------
10) Engine integration into FeatureDashboard, FeatureIDE, ...?
--------------------------------------------------------
11) Engine extension to deal with IFDEF
--------------------------------------------------------
12) Detecting of faulty EA, e.g. typo in begin/end/line, &-symbol missing or missing opening/closing brace
--------------------------------------------------------
13) \&begin or \&end embedded annotation missing-marker detection
--------------------------------------------------------
14) Error handling "Input files/paths don't exist"
--------------------------------------------------------




Future Work:
========================================================
- Mini Online EA Simulator
--------------------------------------------------------
